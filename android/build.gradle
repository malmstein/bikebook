def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone('UTC'))

// Manifest version information!
int versionMajor = 0
int versionMinor = 0
int versionPatch = 1
int versionBuild = 1 // bump for dogfood builds, public betas, etc.

apply plugin: 'android'

dependencies {
    compile project(':core')
    compile 'com.novoda:notils:2.2.5'
    compile('ly.apps:android-rest:1.2.1-SNAPSHOT@aar') {
        transitive = true
        changing = true
    }
}

Properties props = new Properties()
props.load(new FileInputStream(file(rootProject.file('deploy.properties'))))

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        testInstrumentationRunner 'com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner'
        buildConfigField 'String', 'GIT_SHA', '"' + gitSha + '"'
        buildConfigField 'String', 'BUILD_TIME', '"' + buildTime + '"'
    }

    signingConfigs {
        bikeRelease {
            storeFile file('../team-props/bikebook.jks')
            storePassword props['signing.release.storePassword']
            keyAlias props['signing.release.keyAlias']
            keyPassword props['signing.release.keyPassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
        release {
            runProguard false
            signingConfig signingConfigs.bikeRelease
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}